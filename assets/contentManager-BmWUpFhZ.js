const a={BLOG:"blog",ABOUT:"about",RESUME:"resume"},c={[a.BLOG]:"src/data/blog/posts.json",[a.ABOUT]:"src/data/about/content.json",[a.RESUME]:"src/data/resume/content.json"};let e={};const l=async r=>{try{const o=localStorage.getItem(`content_${r}`);if(o)try{const t=JSON.parse(o);return e[r]=t,t}catch(t){console.error(`Error parsing localStorage content for ${r}:`,t),localStorage.removeItem(`content_${r}`)}try{{const s=await fetch(`/api/content/${r}`);if(s.ok){const i=await s.json();return e[r]=i,i}}const t=await fetch(`/${c[r]}`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const n=await t.json();if(r===a.BLOG&&!Array.isArray(n))throw new Error("Invalid blog data structure: expected an array");if(r===a.ABOUT&&(!n.sections||!Array.isArray(n.sections)))throw new Error("Invalid about data structure: expected an object with sections array");return e[r]=n,n}catch{console.log(`No existing content file found for ${r}, creating default content`);const n=r===a.BLOG?[]:{sections:[]};return e[r]=n,n}}catch(o){throw console.error(`Error loading ${r} content:`,o),o}},u=async(r,o)=>{try{if(r===a.BLOG&&!Array.isArray(o))throw new Error("Blog content must be an array");if(r===a.ABOUT&&(!o.sections||!Array.isArray(o.sections)))throw new Error("About content must have a sections array");e[r]=o,localStorage.setItem(`content_${r}`,JSON.stringify(o));{console.log("Saving content to file:",{type:r,path:c[r]});const t=await fetch("/api/save-content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:r,content:o,path:c[r]})});if(!t.ok){const s=await t.json().catch(()=>({error:t.statusText}));throw new Error(`Failed to save content: ${s.error||t.statusText}`)}const n=await t.json();console.log("Content saved successfully:",n)}return!0}catch(t){throw console.error(`Error saving ${r} content:`,t),t}},f=async r=>e[r]?e[r]:l(r);export{a as C,f as g,u as s};
