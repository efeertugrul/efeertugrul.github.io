const n={BLOG:"blog",ABOUT:"about",RESUME:"resume"},i=!0,c={[n.BLOG]:"/content/blog.json",[n.ABOUT]:"/content/about.json",[n.RESUME]:"/content/resume.json"};let s={};const l=async r=>{try{if(i){const a=localStorage.getItem(`content_${r}`);if(a)try{const e=JSON.parse(a);return s[r]=e,e}catch(e){console.error(`Error parsing localStorage content for ${r}:`,e),localStorage.removeItem(`content_${r}`)}}const o=await fetch(c[r]);if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const t=await o.json();if(r===n.BLOG&&!Array.isArray(t))throw new Error("Invalid blog data structure: expected an array");if(r===n.ABOUT&&(!t.sections||!Array.isArray(t.sections)))throw new Error("Invalid about data structure: expected an object with sections array");return s[r]=t,t}catch(o){console.error(`Error loading ${r} content:`,o);const t=r===n.BLOG?[]:{sections:[]};return s[r]=t,t}},u=async(r,o)=>{try{if(r===n.BLOG&&!Array.isArray(o))throw new Error("Blog content must be an array");if(r===n.ABOUT&&(!o.sections||!Array.isArray(o.sections)))throw new Error("About content must have a sections array");s[r]=o,localStorage.setItem(`content_${r}`,JSON.stringify(o));const t=await fetch("/api/save-content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:r,content:o,path:`public${c[r]}`})});if(!t.ok){const e=await t.json().catch(()=>({error:t.statusText}));throw new Error(`Failed to save content: ${e.error||t.statusText}`)}const a=await t.json();return console.log("Content saved successfully:",a),!0}catch(t){throw console.error(`Error saving ${r} content:`,t),t}},h=async r=>s[r]?s[r]:l(r);export{n as C,h as g,u as s};
